# auto-generated by grc.converter

id: sandia_utils_stream_gate
label: Stream Gate
category: '[Sandia]/Sandia Utilities'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [cc, ff, ss, bb]
    option_labels: [Complex->Complex (Complex Taps), Float->Float, Short->Short, Byte->Byte]
    option_attributes:
        input: [complex, float, short, byte]
        output: [complex, float, short, byte]
    hide: part
-   id: flow_data
    label: Flow Data?
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: consume_data
    label: Consume Data?
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    hide: part

inputs:
-   domain: stream
    dtype: ${ type.output }

outputs:
-   domain: stream
    dtype: ${ type.input }

templates:
    imports: import sandia_utils
    make: sandia_utils.stream_gate_${type}(${flow_data},${consume_data})
    callbacks:
    - set_flow_data(${flow_data})
    - set_consume_data(${consume_data})

documentation: |-
    Control the flow of streaming data.  Data flow can be started and stopped.  When
    stopped, the block can either consume data from the input stream and not produce
    any data, or it can not consume or produce data, electing to sleep to reduce
    processing load.  The former condition is necessary when two blocks are
    connected to the same input buffer and one is flowing data while the other is
    not.

file_format: 1
